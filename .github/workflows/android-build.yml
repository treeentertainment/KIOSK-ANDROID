name: Android Build

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    name: Build Android App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ✅ Gradle Wrapper 체크 및 자동 푸시 (V4 기준)
      - name: Check and Generate Gradle Wrapper if missing
        working-directory: V4
        run: |
          if [ ! -f gradlew ]; then
            echo "Gradle Wrapper not found, generating it..."
            gradle wrapper
            chmod +x gradlew
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add gradlew gradlew.bat gradle/wrapper/
            git commit -m "Auto-generate Gradle Wrapper"
            git push origin main
          else
            echo "Gradle Wrapper already exists."
          fi

      # ✅ google-services.json 복원
      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" | base64 -d > V4/app/google-services.json
        # 복원 후 `V4/app/google-services.json` 위치에 배치

      - name: Generate Keystore
        working-directory: V4
        run: |
          keytool -genkeypair -v \
            -keystore app/keystore.jks \
            -storepass ${{ secrets.KEYSTORE_PASSWORD }} \
            -keypass ${{ secrets.KEY_PASSWORD }} \
            -alias ${{ secrets.KEY_ALIAS }} \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -dname "CN=moon, OU=treeentertainment, O=treeentertainment, L=seoul, ST=seoul, C=KR"
          
          base64 app/keystore.jks > app/keystore.jks.base64
          echo "Keystore generated and encoded."

      - name: Set up signing environment
        run: |
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV

      - name: Cache Gradle dependencies and wrapper
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          build-root-directory: V4

      - name: Build Debug APK
        working-directory: V4
        run: ./gradlew assembleDebug --no-daemon --parallel --build-cache --configure-on-demand

      - name: Upload Debug APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: V4/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error

      - name: Build Release APK
        working-directory: V4
        run: ./gradlew assembleRelease --no-daemon --parallel --build-cache --configure-on-demand

      - name: Upload Release APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apk
          path: V4/app/build/outputs/apk/release/app-release.apk
          if-no-files-found: error
